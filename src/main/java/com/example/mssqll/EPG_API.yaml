openapi: "3.1.0"
info:
  title: "EPG API"
  description: "EPG API For extractions and projects"
  version: "1.0.0"
servers:
  - url: "https://capital-badly-imp.ngrok-free.app"
paths:
  /api/v1/excels/upload:
    post:
      summary: "POST api/v1/excels/upload"
      operationId: "handleFileUpload"
      parameters:
        - name: "file"
          in: "query"
          required: true
          schema:
            type: "string"
            format: "binary"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ExtractionResponseDto"
  /api/v1/excels/delete:
    delete:
      summary: "DELETE api/v1/excels/delete"
      operationId: "deleteExtractionTask"
      parameters:
        - name: "taskId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExtractionTask"
  /api/v1/excels/extractions:
    get:
      summary: "GET api/v1/excels/extractions"
      operationId: "getExtractions"
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "1"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Extraction"
  /api/v1/excels/extractions/warning:
    get:
      summary: "GET api/v1/excels/extractions/warning"
      operationId: "getWarningExtractions"
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "1"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Extraction"
  /api/v1/excels/extractions/ok:
    get:
      summary: "GET api/v1/excels/extractions/ok"
      operationId: "getOkExtractions"
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "1"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Extraction"
  /api/v1/excels/getExtractionsByFile:
    get:
      summary: "GET api/v1/excels/getExtractionsByFile"
      operationId: "getExtractionByFile"
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "1"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
        - name: "fileId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Extraction"
  /api/v1/excels/getWarningExtractionsByFile:
    get:
      summary: "GET api/v1/excels/getWarningExtractionsByFile"
      operationId: "getWarningExtractionByFile"
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "1"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
        - name: "fileId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Extraction"
  /api/v1/excels/getOkExtractionsByFile:
    get:
      summary: "GET api/v1/excels/getOkExtractionsByFile"
      operationId: "getOkExtractionByFile"
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "1"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
        - name: "fileId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Extraction"
  /api/v1/excels/filter:
    get:
      summary: "GET api/v1/excels/filter"
      operationId: "filterConnectionFees"
      parameters:
        - name: "filters"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "1"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
        - name: "sortBy"
          in: "query"
          required: false
          schema:
            type: "string"
            default: "id"
        - name: "sortDir"
          in: "query"
          required: false
          schema:
            type: "string"
            default: "ASC"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/extraction-task/all-upls:
    get:
      summary: "GET api/v1/extraction-task/all-upls"
      operationId: "getAllUpls"
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "1"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExtractionTask"
  /api/v1/extraction-task/find-by-name/{fileName}:
    get:
      summary: "GET api/v1/extraction-task/find-by-name/{fileName}"
      operationId: "findByName"
      parameters:
        - name: "fileName"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ExtractionTask"
  /api/v1/business-units:
    post:
      summary: "POST api/v1/business-units"
      operationId: "createBusinessUnit"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessUnit"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BusinessUnitResponseDto"
    get:
      summary: "GET api/v1/business-units"
      operationId: "getAllBusinessUnits"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/BusinessUnitResponseDto"
  /api/v1/business-units/{id}:
    delete:
      summary: "DELETE api/v1/business-units/{id}"
      operationId: "deleteBusinessUnit"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
    get:
      summary: "GET api/v1/business-units/{id}"
      operationId: "getBusinessUnitById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BusinessUnitResponseDto"
  /api/v1/business-units/by-parent/{parentId}:
    get:
      summary: "GET api/v1/business-units/by-parent/{parentId}"
      operationId: "getBusinessUnitsByParent"
      parameters:
        - name: "parentId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/BusinessUnit"
  /api/v1/business-units/roots:
    get:
      summary: "GET api/v1/business-units/roots"
      operationId: "getRootBusinessUnits"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/BusinessUnit"
  /api/v1/connection-fees/{connectionFeeId}:
    put:
      summary: "PUT api/v1/connection-fees/{connectionFeeId}"
      operationId: "updateConnectionFee"
      parameters:
        - name: "connectionFeeId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectionFee"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ConnectionFee"
  /api/v1/connection-fees/{extractionTaskId}:
    post:
      summary: "POST api/v1/connection-fees/{extractionTaskId}"
      operationId: "createConnectionFee"
      parameters:
        - name: "extractionTaskId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ConnectionFee"
  /api/v1/connection-fees:
    post:
      summary: "POST api/v1/connection-fees"
      operationId: "createConnectionFee"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectionFee"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ConnectionFee"
    get:
      summary: "GET api/v1/connection-fees"
      operationId: "getExtractions"
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "1"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ConnectionFee"
  /api/v1/connection-fees/divide-fee/{id}:
    post:
      summary: "POST api/v1/connection-fees/divide-fee/{id}"
      operationId: "divideFee"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              type: "array"
              items:
                type: "number"
                format: "double"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/connection-fees/delete-by-task/{extractionTaskId}:
    delete:
      summary: "DELETE api/v1/connection-fees/delete-by-task/{extractionTaskId}"
      operationId: "deleteConnectionFeeByTaskId"
      parameters:
        - name: "extractionTaskId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/connection-fees/soft-delete/{fee}:
    delete:
      summary: "DELETE api/v1/connection-fees/soft-delete/{fee}"
      operationId: "softDeleteConnectionFee"
      parameters:
        - name: "fee"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/connection-fees/{id}:
    get:
      summary: "GET api/v1/connection-fees/{id}"
      operationId: "getConnectionFee"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ConnectionFee"
  /api/v1/connection-fees/filter:
    get:
      summary: "GET api/v1/connection-fees/filter"
      operationId: "filterConnectionFees"
      parameters:
        - name: "filters"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "1"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
        - name: "sortBy"
          in: "query"
          required: false
          schema:
            type: "string"
            default: "transferDate"
        - name: "sortDir"
          in: "query"
          required: false
          schema:
            type: "string"
            default: "DESC"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/connection-fees/download:
    get:
      summary: "GET api/v1/connection-fees/download"
      operationId: "downloadExcel"
      parameters:
        - name: "accessToken"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  type: "string"
                  format: "byte"
  /api/v1/connection-fees/find-by-parent/{id}:
    get:
      summary: "GET api/v1/connection-fees/find-by-parent/{id}"
      operationId: "findByParent"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ConnectionFeeChildrenDTO"
  /api/v1/auth/signup:
    post:
      summary: "POST api/v1/auth/signup"
      operationId: "signup"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/auth/signin:
    post:
      summary: "POST api/v1/auth/signin"
      operationId: "signIn"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/auth/logout:
    post:
      summary: "POST api/v1/auth/logout"
      operationId: "logoutUser"
      parameters:
        - name: "Authorization"
          in: "header"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/auth/user:
    get:
      summary: "GET api/v1/auth/user"
      operationId: "getAuthenticatedUser"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/user/{id}:
    put:
      summary: "PUT api/v1/user/{id}"
      operationId: "updateUser"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponseDto"
    delete:
      summary: "DELETE api/v1/user/{id}"
      operationId: "deleteUser"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/user:
    get:
      summary: "GET api/v1/user"
      operationId: "getAllUsers"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/UserResponseDto"
components:
  schemas:
    ExtractionTask:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        date:
          type: "string"
          format: "date-time"
        sendDate:
          type: "string"
          format: "date-time"
        fileName:
          type: "string"
        status:
          type: "string"
          enum:
            - "GOOD"
            - "WARNING"
            - "TRANSFERRED_GOOD"
            - "TRANSFERRED_WARNING"
            - "SOFT_DELETED"
    ExtractionResponseDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        date:
          type: "string"
          format: "date"
        totalAmount:
          type: "number"
          format: "double"
        purpose:
          type: "string"
        description:
          type: "string"
        status:
          type: "string"
          enum:
            - "WARNING"
            - "GOOD"
            - "TRANSFERRED"
            - "TRANSFER_COMPLETE"
            - "SOFT_DELETED"
            - "CANCELD"
        extractionTask:
          $ref: "#/components/schemas/ExtractionTask"
    Extraction:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        date:
          type: "string"
          format: "date"
        totalAmount:
          type: "number"
          format: "double"
        purpose:
          type: "string"
        description:
          type: "string"
        status:
          type: "string"
          enum:
            - "WARNING"
            - "GOOD"
            - "TRANSFERRED"
            - "TRANSFER_COMPLETE"
            - "SOFT_DELETED"
            - "CANCELD"
        tax:
          type: "string"
        extractionTask:
          $ref: "#/components/schemas/ExtractionTask"
    BusinessUnit:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        unitNumber:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        unitTypeKey:
          type: "integer"
          format: "int32"
        parent:
          $ref: "#/components/schemas/BusinessUnit"
    BusinessUnitResponseDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        unitNumber:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        unitTypeKey:
          type: "integer"
          format: "int32"
        parent:
          $ref: "#/components/schemas/BusinessUnit"
    Void:
      type: "object"
      properties: { }
    User:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        firstName:
          type: "string"
        lastName:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
        role:
          type: "string"
          enum:
            - "ROLE_ADMIN"
            - "ROLE_OPERATOR"
            - "ROLE_MANAGER"
            - "ROLE_GUEST"
            - "SOFT_DELETED"
        createdAt:
          type: "string"
          format: "date-time"
        updatedAt:
          type: "string"
          format: "date-time"
    ConnectionFee:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        orderStatus:
          type: "string"
          enum:
            - "ORDER_COMPLETE"
            - "ORDER_INCOMPLETE"
        status:
          type: "string"
          enum:
            - "WARNING"
            - "GOOD"
            - "TRANSFERRED"
            - "TRANSFER_COMPLETE"
            - "SOFT_DELETED"
            - "CANCELD"
        orderN:
          type: "string"
        region:
          type: "string"
        serviceCenter:
          type: "string"
        queueNumber:
          type: "string"
        projectID:
          type: "string"
        withdrawType:
          type: "string"
        extractionTask:
          $ref: "#/components/schemas/ExtractionTask"
        clarificationDate:
          type: "string"
          format: "date-time"
        changeDate:
          type: "string"
          format: "date-time"
        transferDate:
          type: "string"
          format: "date-time"
        extractionId:
          type: "integer"
          format: "int64"
        note:
          type: "string"
        extractionDate:
          type: "string"
          format: "date"
        totalAmount:
          type: "number"
          format: "double"
        purpose:
          type: "string"
        description:
          type: "string"
        tax:
          type: "string"
        transferPerson:
          $ref: "#/components/schemas/User"
        changePerson:
          $ref: "#/components/schemas/User"
        children:
          type: "array"
          items:
            $ref: "#/components/schemas/ConnectionFee"
    ConnectionFeeChildrenDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        orderN:
          type: "string"
        region:
          type: "string"
        serviceCenter:
          type: "string"
        projectID:
          type: "string"
        withdrawType:
          type: "string"
        clarificationDate:
          type: "string"
          format: "date-time"
        changeDate:
          type: "string"
          format: "date-time"
        transferDate:
          type: "string"
          format: "date-time"
        extractionId:
          type: "integer"
          format: "int64"
        note:
          type: "string"
        extractionDate:
          type: "string"
          format: "date"
        totalAmount:
          type: "number"
          format: "double"
        purpose:
          type: "string"
        description:
          type: "string"
        tax:
          type: "string"
        children:
          type: "array"
          items:
            $ref: "#/components/schemas/ConnectionFeeChildrenDTO"
    SignUpRequest:
      type: "object"
      properties:
        firstName:
          type: "string"
        lastName:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
        role:
          type: "string"
          enum:
            - "ROLE_ADMIN"
            - "ROLE_OPERATOR"
            - "ROLE_MANAGER"
            - "ROLE_GUEST"
            - "SOFT_DELETED"
    SignInRequest:
      type: "object"
      properties:
        email:
          type: "string"
        password:
          type: "string"
    UserResponseDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        firstName:
          type: "string"
        lastName:
          type: "string"
        email:
          type: "string"
        role:
          type: "string"
          enum:
            - "ROLE_ADMIN"
            - "ROLE_OPERATOR"
            - "ROLE_MANAGER"
            - "ROLE_GUEST"
            - "SOFT_DELETED"
        createdAt:
          type: "string"
          format: "date-time"
        updatedAt:
          type: "string"
          format: "date-time"